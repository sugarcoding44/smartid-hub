events {
    worker_connections 1024;
}

http {
    upstream smartid_registry {
        server smartid-registry:3000;
    }

    # upstream smartid_pos {
    #     server smartid-pos:3000;
    # }

    # upstream smartid_pay {
    #     server smartid-pay:3000;
    # }

    # upstream smartid_time {
    #     server smartid-time:3000;
    # }

    # upstream smartid_hq {
    #     server smartid-hq:3000;
    # }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;

    # Main website (smartid.my)
    server {
        listen 80;
        server_name smartid.my www.smartid.my;
        
        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name smartid.my www.smartid.my;

        ssl_certificate /etc/nginx/ssl/smartid.my.crt;
        ssl_certificate_key /etc/nginx/ssl/smartid.my.key;
        
        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        root /var/www/smartid-main;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }
    }

    # SmartID Registry (id.smartid.my)
    server {
        listen 80;
        server_name id.smartid.my;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name id.smartid.my;

        ssl_certificate /etc/nginx/ssl/smartid.my.crt;
        ssl_certificate_key /etc/nginx/ssl/smartid.my.key;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Rate limiting
        limit_req zone=general burst=20 nodelay;

        location / {
            proxy_pass http://smartid_registry;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
        }
    }

    # Future services (commented out for now)

    # # SmartID POS (pos.smartid.my)
    # server {
    #     listen 80;
    #     server_name pos.smartid.my;
    #     return 301 https://$server_name$request_uri;
    # }

    # server {
    #     listen 443 ssl http2;
    #     server_name pos.smartid.my;

    #     ssl_certificate /etc/nginx/ssl/smartid.my.crt;
    #     ssl_certificate_key /etc/nginx/ssl/smartid.my.key;
        
    #     location / {
    #         proxy_pass http://smartid_pos;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }

    # # SmartID PAY (pay.smartid.my)
    # server {
    #     listen 80;
    #     server_name pay.smartid.my;
    #     return 301 https://$server_name$request_uri;
    # }

    # server {
    #     listen 443 ssl http2;
    #     server_name pay.smartid.my;

    #     ssl_certificate /etc/nginx/ssl/smartid.my.crt;
    #     ssl_certificate_key /etc/nginx/ssl/smartid.my.key;
        
    #     location / {
    #         proxy_pass http://smartid_pay;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }

    # # SmartID TIME (time.smartid.my)
    # server {
    #     listen 80;
    #     server_name time.smartid.my;
    #     return 301 https://$server_name$request_uri;
    # }

    # server {
    #     listen 443 ssl http2;
    #     server_name time.smartid.my;

    #     ssl_certificate /etc/nginx/ssl/smartid.my.crt;
    #     ssl_certificate_key /etc/nginx/ssl/smartid.my.key;
        
    #     location / {
    #         proxy_pass http://smartid_time;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }

    # # SmartID HQ (hq.smartid.my) - Admin Only
    # server {
    #     listen 80;
    #     server_name hq.smartid.my;
    #     return 301 https://$server_name$request_uri;
    # }

    # server {
    #     listen 443 ssl http2;
    #     server_name hq.smartid.my;

    #     ssl_certificate /etc/nginx/ssl/smartid.my.crt;
    #     ssl_certificate_key /etc/nginx/ssl/smartid.my.key;
        
    #     # Additional security for HQ
    #     allow 10.0.0.0/8;     # Internal networks only
    #     allow 192.168.0.0/16; # Internal networks only
    #     deny all;
        
    #     location / {
    #         proxy_pass http://smartid_hq;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }

    # Default server block (catch-all)
    server {
        listen 80 default_server;
        listen 443 ssl default_server;
        server_name _;
        
        ssl_certificate /etc/nginx/ssl/smartid.my.crt;
        ssl_certificate_key /etc/nginx/ssl/smartid.my.key;
        
        return 444; # Close connection
    }
}
